{"ast":null,"code":"function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { SEARCH_BUTTON } from \"../../environment/const\";\nimport SearchType from \"./SearchType\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withRouter } from \"react-router-dom\";\nexport var Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSearchClick\", function () {\n      var _this$state = _this.state,\n          searchInput = _this$state.searchInput,\n          searchType = _this$state.searchType;\n      var url = \"/search?searchInput=\".concat(searchInput, \"&searchType=\").concat(searchType);\n\n      _this.props.history.push(url);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSearchByTitleClick\", function () {\n      _this.setState({\n        searchType: \"title\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSearchByGenreClick\", function () {\n      _this.setState({\n        searchType: \"genre\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSearchValueChange\", function (e) {\n      _this.setState({\n        searchInput: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"render\", function () {\n      return React.createElement(\"div\", {\n        className: \"search\"\n      }, React.createElement(\"input\", {\n        id: \"search-input\",\n        className: \"search-input\",\n        onChange: _this.onSearchValueChange\n      }), React.createElement(\"button\", {\n        id: \"search-btn\",\n        className: \"btn btn-success m-2 ml-3\",\n        onClick: _this.onSearchClick\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"search\",\n        className: \"mr-1\"\n      }), SEARCH_BUTTON), React.createElement(\"div\", {\n        className: \"search-type\"\n      }, React.createElement(SearchType, {\n        onSearchByGenreClick: _this.onSearchByGenreClick,\n        onSearchByTitleClick: _this.onSearchByTitleClick\n      })));\n    });\n\n    _this.state = {\n      searchInput: null,\n      searchType: \"title\"\n    };\n    return _this;\n  }\n\n  return Search;\n}(React.Component);\nexport default withRouter(Search);","map":null,"metadata":{},"sourceType":"module"}